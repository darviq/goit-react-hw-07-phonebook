{"version":3,"sources":["redux/actionTypes/actionTypes.js","redux/reducers/contactsReducer.js","redux/reducers/loadingReducer.js","redux/reducers/errorsReducer.js","redux/operations/contactOperations.js","redux/selectors/contacts-selectors.js","components/phonebook/contactForm/notification/Notification.js","components/phonebook/contactForm/ContactFormStyled.js","components/phonebook/contactForm/ContactForm.js","redux/reducers/filterReducer.js","components/phonebook/filter/Filter.js","components/phonebook/contactList/contactItem/ContactItem.js","components/phonebook/contactList/ContactList.js","components/phonebook/PhonebookStyled.js","components/phonebook/Phonebook.js","components/App.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["contacts","addContact","createAction","loadContacts","removeContact","contactsReducer","createReducer","state","payload","filter","contact","id","changeLoadingStatus","loadingReducer","setError","errorsReducer","baseURL","getContacts","items","getFilter","getLoadingStatus","loading","getFilteredContacts","createSelector","name","toLowerCase","includes","Div","transition","div","Notification","showNotification","in","timeout","unmountOnExit","Form","styled","form","ContactForm","useState","number","setState","dispatch","useDispatch","inputHandler","e","target","value","prevState","onSubmit","preventDefault","find","setTimeout","axios","post","then","response","data","catch","error","finally","type","onChange","changeFilter","filterReducer","Filter","Li","li","ContactItem","data-id","onClick","delete","removeContactOperation","dataset","ContactList","contactsToShow","useSelector","contactsSelector","TransitionGroup","component","map","mountOnEnter","H1","h1","Phonebook","useEffect","get","Object","keys","key","appear","length","App","rootReducer","combineReducers","errors","store","configureStore","reducer","middleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a7517ea.chunk.js","sourcesContent":["export const contacts = {\r\n    add: \"ADD_CONCTACT\",\r\n    load: \"LOAD_CONCTACTS\",\r\n    remove: \"REMOVE_CONCTACT\",\r\n};\r\n\r\nexport const filter = {\r\n    change: \"CHANGE_FILTER\",\r\n};\r\n\r\nexport const loading = {\r\n    change: \"CHANGE_LOADING_STATUS\",\r\n};\r\n\r\nexport const errors = {\r\n    set: \"SET_ERROR\",\r\n};\r\n","import {createAction} from \"@reduxjs/toolkit\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {contacts} from \"../actionTypes/actionTypes\";\r\n\r\nexport const addContact = createAction(contacts.add);\r\nexport const loadContacts = createAction(contacts.load);\r\nexport const removeContact = createAction(contacts.remove);\r\n\r\nconst contactsReducer = createReducer([], {\r\n    [addContact]: (state, {payload}) => (state = [...state, {...payload}]),\r\n    [loadContacts]: (state, {payload}) => (state = [...payload]),\r\n    [removeContact]: (state, {payload}) => (state = [...state.filter(contact => contact.id !== payload)]),\r\n});\r\n\r\nexport default contactsReducer;\r\n","import {createAction} from \"@reduxjs/toolkit\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {loading} from \"../actionTypes/actionTypes\";\r\n\r\nexport const changeLoadingStatus = createAction(loading.change);\r\n\r\nconst loadingReducer = createReducer(false, {\r\n    [changeLoadingStatus]: state => (state = !state),\r\n});\r\n\r\nexport default loadingReducer;\r\n","import {createAction} from \"@reduxjs/toolkit\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {errors} from \"../actionTypes/actionTypes\";\r\n\r\nexport const setError = createAction(errors.set);\r\n\r\nconst errorsReducer = createReducer([], {\r\n    [setError]: (state, {payload}) => (state = [...state, {...payload}]),\r\n});\r\n\r\nexport default errorsReducer;\r\n","import {addContact, loadContacts, removeContact} from \"../reducers/contactsReducer\";\r\nimport {changeLoadingStatus} from \"../reducers/loadingReducer\";\r\nimport {setError} from \"../reducers/errorsReducer\";\r\nimport axios from \"axios\";\r\n\r\nconst baseURL = \"https://phonebook-aed1e-default-rtdb.firebaseio.com\";\r\n\r\nexport const addContactOperation = contact => dispatch => {\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .post(`${baseURL}/contacts.json`, {...contact})\r\n        .then(response => dispatch(addContact({...contact, id: response.data.name})))\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n\r\nexport const loadContactsOperation = () => dispatch => {\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .get(`${baseURL}/contacts.json`)\r\n        .then(response => {\r\n            if (response.data) {\r\n                const contacts = Object.keys(response.data).map(key => ({\r\n                    ...response.data[key],\r\n                    id: key,\r\n                }));\r\n                dispatch(loadContacts(contacts));\r\n            }\r\n        })\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n\r\nexport const removeContactOperation = id => dispatch => {\r\n    dispatch(changeLoadingStatus());\r\n    axios\r\n        .delete(`${baseURL}/contacts/${id}.json`)\r\n        .then(() => dispatch(removeContact(id)))\r\n        .catch(error => dispatch(setError(error)))\r\n        .finally(() => dispatch(changeLoadingStatus()));\r\n};\r\n","import {createSelector} from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoadingStatus = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n});\r\n\r\nexport default {getContacts, getLoadingStatus, getFilter, getFilteredContacts};\r\n","import transition from \"styled-transition-group\";\r\n\r\nconst Div = transition.div`\r\n    position: absolute;\r\n    top: 26px;\r\n    left: 70px;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    border-radius: 6px;\r\n    background-color: hotpink;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 200px;\r\n    height: 50px;\r\n    vertical-align: center;\r\n\r\n\r\n    &:enter {\r\n        transform: translateX(-150%);\r\n    }\r\n    &:enter-active {\r\n        transform: translateX(0);\r\n        transition: transform 250ms;\r\n    }\r\n    &:exit {\r\n        transform: translateX(0);\r\n    }\r\n    &:exit-active {\r\n        transform: translateX(-150%);\r\n        transition: transform 250ms;\r\n    }\r\n`;\r\n\r\nconst Notification = ({showNotification}) => (\r\n    <Div in={showNotification} timeout={250} unmountOnExit>\r\n        Contact already exists!\r\n    </Div>\r\n);\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 25px;\r\n\r\n    label {\r\n        display: block;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 100%;\r\n        height: 26px;\r\n    }\r\n\r\n    button {\r\n        width: 100%;\r\n        height: 26px;\r\n        margin-top: 10px;\r\n        background-color: honeydew;\r\n    }\r\n\r\n    button:hover,\r\n    button:focus {\r\n        background-color: lightgreen;\r\n    }\r\n`;\r\n\r\nexport default Form;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Notification from \"./notification/Notification\";\r\nimport {addContactOperation} from \"../../../redux/operations/contactOperations\";\r\nimport Form from \"./ContactFormStyled\";\r\n\r\nconst ContactForm = ({contacts}) => {\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        number: \"\",\r\n        showNotification: false,\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const contactExists = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            showNotification: true,\r\n        }));\r\n        setTimeout(() => {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                showNotification: false,\r\n            }));\r\n        }, 4000);\r\n    };\r\n\r\n    const inputHandler = e => {\r\n        const {name, value} = e.target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (contacts.find(contact => contact.name === state.name)) {\r\n            contactExists();\r\n        } else {\r\n            dispatch(addContactOperation({name: state.name, number: state.number}));\r\n            setState({name: \"\", number: \"\", showNotification: false});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={submitHandler}>\r\n                <label>\r\n                    Name\r\n                    <input type=\"text\" value={state.name} name=\"name\" onChange={inputHandler} />\r\n                </label>\r\n                <label>\r\n                    Number\r\n                    <input type=\"text\" value={state.number} name=\"number\" onChange={inputHandler} />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </Form>\r\n            <Notification showNotification={state.showNotification} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","import {createAction} from \"@reduxjs/toolkit\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport {filter} from \"../actionTypes/actionTypes\";\r\n\r\nexport const changeFilter = createAction(filter.change);\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n    [changeFilter]: (state, {payload}) => (state = payload),\r\n});\r\n\r\nexport default filterReducer;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {changeFilter} from \"../../../redux/reducers/filterReducer\";\r\n\r\nconst Div = styled.div`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 25px;\r\n\r\n    label {\r\n        display: block;\r\n    }\r\n\r\n    input {\r\n        display: block;\r\n        width: 100%;\r\n        height: 26px;\r\n    }\r\n`;\r\n\r\nconst Filter = () => {\r\n    const [state, setState] = useState({\r\n        value: \"\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputHandler = e => {\r\n        setState({value: e.target.value});\r\n        dispatch(changeFilter(e.target.value));\r\n    };\r\n\r\n    return (\r\n        <Div>\r\n            <label>\r\n                Find contacts by name\r\n                <input type=\"text\" value={state.value} name=\"filter\" onChange={inputHandler} />\r\n            </label>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import {useDispatch} from \"react-redux\";\r\nimport {removeContactOperation} from \"../../../../redux/operations/contactOperations\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nconst Li = transition.li`\r\n    width: 100%;\r\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\r\n    padding: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    &:enter {\r\n        transform: translateX(-120%);\r\n    }\r\n    &:enter-active {\r\n        transform: translateX(0);\r\n        transition: transform 250ms;\r\n    }\r\n    &:exit {\r\n        transform: translateX(0);\r\n    }\r\n    &:exit-active {\r\n        transform: translateX(-120%);\r\n        transition: transform 250ms;\r\n    }\r\n\r\n    button {\r\n        background-color: hotpink;\r\n        font-weight: 700;\r\n        width: 30px;\r\n        height: 30px;\r\n\r\n        :hover,\r\n        :focus {\r\n            background-color: red;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ContactItem = ({name, number, id}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const removeContactHandler = e => {\r\n        dispatch(removeContactOperation(e.target.dataset.id));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <button type=\"button\" data-id={id} onClick={removeContactHandler}>\r\n                &#x2715;\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport {ContactItem, Li};\r\n","import contactsSelector from \"../../../redux/selectors/contacts-selectors\";\r\nimport {TransitionGroup} from \"react-transition-group\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ContactItem, Li} from \"./contactItem/ContactItem\";\r\n\r\nconst ContactList = () => {\r\n    const contactsToShow = useSelector(contactsSelector.getFilteredContacts);\r\n\r\n    return (\r\n        <TransitionGroup component=\"ul\">\r\n            {contactsToShow.map(contact => (\r\n                <Li key={contact.id} timeout={1000} mountOnEnter unmountOnExit>\r\n                    <ContactItem {...contact} />\r\n                </Li>\r\n            ))}\r\n        </TransitionGroup>\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nconst Div = styled.div`\r\n    width: 300px;\r\n    margin-left: 25px;\r\n\r\n    h2 {\r\n        margin-top: 10px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst H1 = transition.h1`\r\n    text-align: center;\r\n\r\n    &:appear {\r\n        transform: translateX(-100%);\r\n    }\r\n    &:appear-active {\r\n        transform: translateX(0);\r\n        transition: transform 500ms;\r\n    }\r\n`;\r\n\r\nexport {Div, H1};\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {loadContactsOperation} from \"../../redux/operations/contactOperations\";\r\nimport contactsSelector from \"../../redux/selectors/contacts-selectors\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport {Div, H1} from \"./PhonebookStyled\";\r\n\r\nconst Phonebook = () => {\r\n    const contacts = useSelector(contactsSelector.getContacts);\r\n    const loading = useSelector(contactsSelector.getLoadingStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadContactsOperation());\r\n    }, []);\r\n\r\n    return (\r\n        <Div>\r\n            <H1 in={true} appear timeout={500}>\r\n                {loading ? \"Loading...\" : \"Phonebook\"}\r\n            </H1>\r\n            <ContactForm contacts={contacts} />\r\n            {contacts.length > 0 && (\r\n                <>\r\n                    <h2>Contacts</h2>\r\n                    <Filter />\r\n                </>\r\n            )}\r\n            <ContactList />\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport Phonebook from \"./phonebook/Phonebook\";\r\n\r\nconst App = () => {\r\n    return <Phonebook />;\r\n};\r\n\r\nexport default App;\r\n","import {combineReducers} from \"redux\";\r\nimport contactsReducer from \"./contactsReducer\";\r\nimport loadingReducer from \"./loadingReducer\";\r\nimport errorsReducer from \"./errorsReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nconst rootReducer = {\r\n    contacts: combineReducers({\r\n        items: contactsReducer,\r\n        loading: loadingReducer,\r\n        errors: errorsReducer,\r\n        filter: filterReducer,\r\n    }),\r\n};\r\n\r\nexport default rootReducer;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}